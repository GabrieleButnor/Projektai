@model L2_veterinarija.ViewModels.MiestasEditViewModel

@{ var psl_k_count = 0; }


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">

        <h4>Miesto redagvimas</h4>
        <hr />
        <fieldset>
            <legend>Miesto informacija</legend>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.miestas.id)

            <div class="form-group">
                @Html.LabelFor(model => model.miestas.salis, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.miestas.salis, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.miestas.salis, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.miestas.apskritiespavadinimas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.miestas.apskritiespavadinimas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.miestas.apskritiespavadinimas, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.miestas.pavadinimas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.miestas.pavadinimas, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.miestas.pavadinimas, "", new { @class = "text-danger" })
                </div>
            </div>

            @{if (Model.klinikos != null)
                {
                    psl_k_count = Model.klinikos.Count;
                }
                else
                {
                    psl_k_count = 0;
                }
            }
        </fieldset>

        <fieldset>
            <legend>Klinikos</legend>
            <table class="table-responsive" id="klinikos_tbl">
                <thead>
                    <tr>
                        <th>Imonės kodas</th>
                        <th>Pavadinimas</th>
                        <th>Adresas</th>
                        <th>Telefonas</th>
                        <th>Elektronis paštas</th>
                        <th>Darbuotojų skaičius</th>
                    </tr>
                </thead>
                @if (Model.klinikos != null)
                {
                    for (int i = 0; i < Model.klinikos.Count; i++)
                    {

                        if (Model.klinikos[i].kiekis > 0)
                        {
                            <tr>

                                <td>
                                    @Html.HiddenFor(model => model.klinikos[i].fk_miestas)
                                    @Html.HiddenFor(model => model.klinikos[i].kiekis)
                                    @Html.EditorFor(model => model.klinikos[i].imoneskodas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </td>
                                <td>@Html.EditorFor(model => model.klinikos[i].pavadinimas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].adresas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].telefonas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].epastas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].darbuotojusk, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>
                                    @Html.HiddenFor(model => model.klinikos[i].fk_miestas)
                                    @Html.HiddenFor(model => model.klinikos[i].kiekis)
                                    @Html.EditorFor(model => model.klinikos[i].imoneskodas, new { htmlAttributes = new { @class = "form-control" } })
                                </td>
                                <td>@Html.EditorFor(model => model.klinikos[i].pavadinimas, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].adresas, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].telefonas, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].epastas, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td>@Html.EditorFor(model => model.klinikos[i].darbuotojusk, new { htmlAttributes = new { @class = "form-control" } })</td>
                                <td><button type="button" class="btn btn-danger" onclick="salinti(this)"><i class="glyphicon-remove"></i> Šalinti</button></td>
                            </tr>
                        }
                    }
                }

            </table>
            <input type="hidden" disabled value="@psl_k_count" id="hCount" />
            <button type="button" id="prd" class="btn btn-info" onclick="prideti($('#hCount').val());"><i class="glyphicon-plus-sign"></i> Pridėti</button>
        </fieldset>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" style="margin-top: 5px;" value="Išsaugoti" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Atgal į sąrašą »", "Index", "Miestai", new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function prideti(sk) {
            var tmp_row = `"<tr>
                        <td>
                            <input data-val="true" data-val-number="The field fk_miestas must be a number." data-val-required="The fk_miestas field is required." id="klinikos_`+ sk + `__fk_miestas" name="klinikos[` + sk + `].fk_miestas" type="hidden" value="0">
                            <input data-val="true" data-val-number="The field kiekis must be a number." data-val-required="The kiekis field is required." id="paslaugosKainos_`+ sk + `__kiekis" name="paslaugosKainos[` + sk + `].kiekis" type="hidden" value="">

                            <input data-val="true" data-val-number="The field imoneskodas must be a number." data-val-required="The imoneskodas field is required." id="klinikos_`+ sk + `__imoneskodas" name="klinikos[` + sk + `].imoneskodas" type="text" value="">
                            <td><input data-val="true" data-val-required="The pavadinimas field is required." id="klinikos_`+ sk + `__pavadinimas" name="klinikos[` + sk + `].pavadinimas" type="text" value=""></td>
                            <td><input data-val="true" data-val-required="The adresas field is required." id="klinikos_`+ sk + `__adresas" name="klinikos[` + sk + `].adresas" type="text" value=""></td>
                            <td><input data-val="true" data-val-required="The telefonas field is required." id="klinikos_`+ sk + `__telefonas" name="klinikos[` + sk + `].telefonas" type="text" value=""></td>
                            <td><input data-val="true" data-val-required="The epastas field is required." id="klinikos_`+ sk + `__epastas" name="klinikos[` + sk + `].epastas" type="text" value=""></td>
                            <td><input data-val="true" data-val-number="The field darbuotojusk must be a number." data-val-required="The darbuotojusk field is required." id="klinikos_`+ sk + `__darbuotojusk" name="klinikos[` + sk + `].darbuotojusk" type="text" value=""></td>
        
                        </td>                     
                        <td><button type="button" class="btn btn-danger" onclick="salinti(this)"><i class="glyphicon-remove"></i> Šalinti</button></td>
                    </tr>"`;

            $("#klinikos_tbl tr:last").after(tmp_row);

            $('#hCount').val(Number($('#hCount').val()) + 1);
        };

        function salinti(btn) {
            $(btn).closest('tr').remove();


            var cnt = 0;

            $("#kainos_tbl tbody tr").each(function () {
                var tmp_row = "<tr>" + $(this).html() + "</tr>";
                var new_tmp_row = tmp_row.replace(/\[(.)\]/g, "[" + cnt + "]");
                new_tmp_row = new_tmp_row.replace(/\_(.)\_/g, "_" + cnt + "_");
                $(this).replaceWith(new_tmp_row);
                cnt = cnt + 1;
            });

            $('#hCount').val(cnt);

        }
    </script>
}